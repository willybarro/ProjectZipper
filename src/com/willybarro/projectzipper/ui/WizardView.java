/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProjectZipperAction.java
 *
 * Created on Jun 19, 2011, 12:45:51 AM
 */
package com.willybarro.projectzipper.ui;

import com.willybarro.projectzipper.ProjectZipper;
import com.willybarro.projectzipper.lib.Ignore;
import com.willybarro.projectzipper.lib.IgnorePattern;
import com.willybarro.projectzipper.helper.ProjectHelper;
import com.willybarro.projectzipper.controller.WizardController;
import com.willybarro.projectzipper.model.PackageTemplateListModel;
import com.willybarro.projectzipper.packager.ClipboardPackager;
import com.willybarro.projectzipper.packager.ConfigurationModel;
import com.willybarro.swing.CheckboxedTreeFileChooser;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.netbeans.api.project.Project;

/**
 *
 * @author willy
 */
public class WizardView extends javax.swing.JFrame {
    private String fileTreeChooserPath = "";
    private final String FS = System.getProperty("file.separator");

    public String getFileTreeChooserPath() {
        return fileTreeChooserPath;
    }

    public void setFileTreeChooserPath(String fileTreeChooserPath) {
        this.fileTreeChooserPath = fileTreeChooserPath;
    }
    

    /** Creates new form ProjectZipperAction */
    public WizardView() {
        initComponents();
    }
    
    private Project activeProject;
    public WizardView(Project project) {
        this.activeProject = project;
        this.setFileTreeChooserPath(project.getProjectDirectory().getPath());
        initComponents();
        
        String windowTitle = "Project Zipper: " + ProjectHelper.getProjectInfo(project).getDisplayName();
        this.setTitle(windowTitle);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblExport = new javax.swing.JLabel();
        inputPath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        comboExportTo = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputFilepatterns = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbSvn = new javax.swing.JCheckBox();
        cbGit = new javax.swing.JCheckBox();
        cbHtaccess = new javax.swing.JCheckBox();
        cbDotFilesAndDirectories = new javax.swing.JCheckBox();
        cbNbProject = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnClose = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        labelExporting = new javax.swing.JLabel();
        labelExporting.setVisible(false);
        btnCancel = new javax.swing.JButton();
        btnCancel.setVisible(false);
        panelResources = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        checkboxedTreeFileChooser = new com.willybarro.swing.CheckboxedTreeFileChooser();
        checkboxedTreeFileChooser.setPath(this.getFileTreeChooserPath());
        jScrollPane2 = new javax.swing.JScrollPane();
        listPackageTemplates = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnCopyFileListClipboard = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setTitle(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.title")); // NOI18N
        setResizable(false);

        lblExport.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel2.text")); // NOI18N

        inputPath.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.inputPath.text")); // NOI18N

        btnBrowse.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.btnBrowse.text")); // NOI18N
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        comboExportTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Zip File", "Folder", "File List", "Ant File" }));

        jLabel8.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.jLabel8.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboExportTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputPath, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboExportTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(inputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse)
                    .addComponent(lblExport))
                .addGap(84, 84, 84))
        );

        jLabel3.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel4.text")); // NOI18N

        inputFilepatterns.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.inputFilepatterns.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel5.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel6.text")); // NOI18N

        cbSvn.setSelected(true);
        cbSvn.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.cbSvn.text")); // NOI18N

        cbGit.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.cbGit.text")); // NOI18N

        cbHtaccess.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.cbHtaccess.text")); // NOI18N

        cbDotFilesAndDirectories.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.cbDotFilesAndDirectories.text")); // NOI18N
        cbDotFilesAndDirectories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDotFilesAndDirectoriesActionPerformed(evt);
            }
        });

        cbNbProject.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.cbNbProject.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cbSvn)
                                .addGap(18, 18, 18)
                                .addComponent(cbGit)
                                .addGap(18, 18, 18)
                                .addComponent(cbHtaccess))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cbDotFilesAndDirectories)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNbProject))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(inputFilepatterns))))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputFilepatterns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSvn)
                    .addComponent(cbGit)
                    .addComponent(cbHtaccess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDotFilesAndDirectories)
                    .addComponent(cbNbProject)))
        );

        btnClose.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.btnClose.text")); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnExport.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.btnExport.text")); // NOI18N
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        helpButton.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.helpButton.text")); // NOI18N
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        labelExporting.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.labelExporting.text")); // NOI18N
        labelExporting.setFocusable(false);

        btnCancel.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(helpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addComponent(labelExporting)
                        .addGap(4, 4, 4)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnExport)
                    .addComponent(helpButton)
                    .addComponent(labelExporting)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "Wizard.jLabel1.text")); // NOI18N

        jScrollPane1.setViewportView(checkboxedTreeFileChooser);

        listPackageTemplates.setModel(new com.willybarro.projectzipper.model.PackageTemplateListModel());
        jScrollPane2.setViewportView(listPackageTemplates);

        jButton2.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.jLabel2.text")); // NOI18N

        btnCopyFileListClipboard.setText(org.openide.util.NbBundle.getMessage(WizardView.class, "WizardView.btnCopyFileListClipboard.text")); // NOI18N
        btnCopyFileListClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyFileListClipboardActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout panelResourcesLayout = new javax.swing.GroupLayout(panelResources);
        panelResources.setLayout(panelResourcesLayout);
        panelResourcesLayout.setHorizontalGroup(
            panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResourcesLayout.createSequentialGroup()
                .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1)
                    .addComponent(btnCopyFileListClipboard, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelResourcesLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelResourcesLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelResourcesLayout.setVerticalGroup(
            panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResourcesLayout.createSequentialGroup()
                .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelResourcesLayout.createSequentialGroup()
                        .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCopyFileListClipboard, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jButton2)))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelResources, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelResources, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-550)/2, (screenSize.height-678)/2, 550, 678);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int retval = fileChooser.showOpenDialog(this);
        
        if(retval == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            
            // Data
            String fileDate = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
            
            // Filename
            String fileName = ProjectHelper.getProjectSanitizedName(activeProject);
            String fileOutPath = filePath + FS + fileName + "_" + fileDate;
            
            // If we'll export to .zip, append extension
            if(getCbExportZip().isSelected()) {
                fileOutPath += ".zip";
            } else {
                fileOutPath += FS;
            }
            
            // Updates text input
            inputPath.setText(fileOutPath);
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        JOptionPane.showMessageDialog(null, "Project Zipper v"+ ProjectZipper.version +"\n\nSource code, issues and discussion on:\nhttp://github.com/willybarro/ProjectZipper\n\nCreated by Willy Barro");
    }//GEN-LAST:event_helpButtonActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        WizardController.getDefault().startBuildAction();
    }//GEN-LAST:event_btnExportActionPerformed

    private void cbDotFilesAndDirectoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDotFilesAndDirectoriesActionPerformed
        
        if(cbDotFilesAndDirectories.isSelected()) {
            cbSvn.setSelected(false);
            cbSvn.setEnabled(false);
            
            cbGit.setSelected(false);
            cbGit.setEnabled(false);
            
            cbHtaccess.setSelected(false);
            cbHtaccess.setEnabled(false);
        } else {
            cbSvn.setEnabled(true);
            cbGit.setEnabled(true);
            cbHtaccess.setEnabled(true);
        }
    }//GEN-LAST:event_cbDotFilesAndDirectoriesActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    WizardController.getDefault().stopBuildAction();
}//GEN-LAST:event_btnCancelActionPerformed

	private void btnCopyFileListClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyFileListClipboardActionPerformed
            ConfigurationModel model = new ConfigurationModel(this.getCheckboxedTreeFileChooser().getCheckedPaths());
            new ClipboardPackager(model).generate();
	}//GEN-LAST:event_btnCopyFileListClipboardActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new WizardView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCopyFileListClipboard;
    private javax.swing.JButton btnExport;
    private javax.swing.JCheckBox cbDotFilesAndDirectories;
    private javax.swing.JCheckBox cbGit;
    private javax.swing.JCheckBox cbHtaccess;
    private javax.swing.JCheckBox cbNbProject;
    private javax.swing.JCheckBox cbSvn;
    private com.willybarro.swing.CheckboxedTreeFileChooser checkboxedTreeFileChooser;
    private javax.swing.JComboBox comboExportTo;
    private javax.swing.JButton helpButton;
    private javax.swing.JTextField inputFilepatterns;
    private javax.swing.JTextField inputPath;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelExporting;
    private javax.swing.JLabel lblExport;
    private javax.swing.JList listPackageTemplates;
    private javax.swing.JPanel panelResources;
    // End of variables declaration//GEN-END:variables

    public CheckboxedTreeFileChooser getCheckboxedTreeFileChooser() {
        return checkboxedTreeFileChooser;
    }

    public JPanel getPanelResources() {
        return panelResources;
    }

    public void setIsExporting(boolean isExporting) {
        if(isExporting) {
            labelExporting.setVisible(true);
            btnCancel.setVisible(true);
            btnExport.setVisible(false);
        } else {
            labelExporting.setVisible(false);
            btnCancel.setVisible(false);
            btnExport.setVisible(true);
        }
    }

    public ArrayList<IgnorePattern> getIgnorePatterns()
    {
        ArrayList<IgnorePattern> ignorePatterns = new ArrayList<IgnorePattern>();
        
        // Input wrote patterns
        String textInputPatterns = getInputFilepatterns().getText();
        if(!textInputPatterns.isEmpty()) {
            String[] inputPatterns = textInputPatterns.split(",");
            
            for(String p : inputPatterns) {
                IgnorePattern ip = IgnorePattern.factory(p.trim(), Ignore.IGNORE_BOTH);
                ignorePatterns.add(ip);
            }
        }
        
        // Checkboxes
        ignorePatterns.add(getCbSvn());
        ignorePatterns.add(getCbGit());
        ignorePatterns.add(getCbHtaccess());
        ignorePatterns.add(getCbDotFilesAndDirectories());
        ignorePatterns.add(getCbNbProject());
        
        return ignorePatterns;
    }

    public IgnorePattern getCbDotFilesAndDirectories() {
        if(cbDotFilesAndDirectories.isSelected()) {
            return IgnorePattern.factory(".*", Ignore.IGNORE_BOTH);
        } else {
            return null;
        }
    }

    public IgnorePattern getCbGit() {
        if(cbGit.isSelected()) {
            return IgnorePattern.factory(".git", Ignore.IGNORE_DIRECTORY);
        } else {
            return null;
        }
    }

    public IgnorePattern getCbHtaccess() {
        if(cbHtaccess.isSelected()) {
            return IgnorePattern.factory(".htaccess", Ignore.IGNORE_FILE);
        } else {
            return null;
        }
    }

    public IgnorePattern getCbSvn() {
        if(cbSvn.isSelected()) {
            return IgnorePattern.factory(".svn", Ignore.IGNORE_DIRECTORY);
        } else {
            return null;
        }
    }
    
    public IgnorePattern getCbNbProject() {
        if(cbNbProject.isSelected()) {
            return IgnorePattern.factory("nbproject", Ignore.IGNORE_DIRECTORY);
        } else {
            return null;
        }
    }

    public JCheckBox getCbExportZip() {
        return null;
    }

    public JTextField getInputFilepatterns() {
        return inputFilepatterns;
    }

    public JTextField getInputPath() {
        return inputPath;
    }
}
